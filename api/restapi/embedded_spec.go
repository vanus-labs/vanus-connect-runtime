// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "text/plain",
    "application/json",
    "application/octet-stream",
    "application/x-www-form-urlencoded"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "this document describes the functions, parameters and return values of the vanus connect runtime API\n",
    "title": "Vanus Connect Runtime Interface Document",
    "version": "v0.2.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/healthz/": {
      "get": {
        "description": "healthz",
        "tags": [
          "healthz"
        ],
        "operationId": "healthz",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/APIResponse"
            }
          }
        }
      }
    },
    "/source/chatai/{connector_id}": {
      "post": {
        "description": "source chatai connector request",
        "tags": [
          "connector"
        ],
        "operationId": "chatai",
        "parameters": [
          {
            "name": "message",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/APIResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "the chatai connector id",
          "name": "connector_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/source/chatgpt/{connector_id}": {
      "post": {
        "description": "source chatgpt connector request",
        "tags": [
          "connector"
        ],
        "operationId": "chatgpt",
        "parameters": [
          {
            "name": "message",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/APIResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "the chatgpt connector id",
          "name": "connector_id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "APIResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "object"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json",
    "application/octet-stream",
    "application/x-www-form-urlencoded",
    "text/plain"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "this document describes the functions, parameters and return values of the vanus connect runtime API\n",
    "title": "Vanus Connect Runtime Interface Document",
    "version": "v0.2.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/healthz/": {
      "get": {
        "description": "healthz",
        "tags": [
          "healthz"
        ],
        "operationId": "healthz",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/APIResponse"
            }
          }
        }
      }
    },
    "/source/chatai/{connector_id}": {
      "post": {
        "description": "source chatai connector request",
        "tags": [
          "connector"
        ],
        "operationId": "chatai",
        "parameters": [
          {
            "name": "message",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/APIResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "the chatai connector id",
          "name": "connector_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/source/chatgpt/{connector_id}": {
      "post": {
        "description": "source chatgpt connector request",
        "tags": [
          "connector"
        ],
        "operationId": "chatgpt",
        "parameters": [
          {
            "name": "message",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/APIResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "the chatgpt connector id",
          "name": "connector_id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "APIResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "object"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}`))
}
